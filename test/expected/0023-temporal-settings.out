BEGIN;
CREATE EXTENSION sys_syn_dblink;
CREATE EXTENSION temporal_tables;
CREATE EXTENSION btree_gist;
INSERT INTO sys_syn_dblink.put_table_transforms(
        rule_group_id,          priority,       final_ids,              in_table_id_like,
        table_settings)
VALUES (NULL,                   25,             '{}',                   'test_table_array',
        $$
        sys_syn.temporal.active_table_name      => %1_active,
        sys_syn.temporal.history_table_name     => %1_inactive,
        sys_syn.temporal.range_1.column_name    => trans_period
        $$);
CREATE SCHEMA processor_data
        AUTHORIZATION postgres;
SELECT  dblink_connect('sys_syn_test', 'dbname=contrib_regression host=' ||
        quote_literal(split_part((SELECT pg_settings.setting FROM pg_settings WHERE pg_settings.name = 'unix_socket_directories'), ', ', 1)));
 dblink_connect 
----------------
 OK
(1 row)

SELECT dblink_exec('sys_syn_test', 'BEGIN');
 dblink_exec 
-------------
 BEGIN
(1 row)

INSERT INTO sys_syn_dblink.in_groups_def VALUES ('sys_syn_test', 'in');
INSERT INTO sys_syn_dblink.out_groups_def VALUES ('sys_syn_test', 'out');
INSERT INTO sys_syn_dblink.put_groups_def VALUES ('put');
SELECT sys_syn_dblink.processing_table_add (
        proc_schema     => 'processor_data',
        in_table_id     => 'test_table_array',
        out_group_id    => 'out',
        put_group_id    => 'put',
        put_schema      => 'processor_data',
        table_type_id   => 'sys_syn-temporal',
        dblink_connname => 'sys_syn_test');
 processing_table_add 
----------------------
 
(1 row)

SELECT * FROM processor_data.test_table_array_out_claim();
 test_table_array_out_claim 
----------------------------
 t
(1 row)

SELECT * FROM processor_data.test_table_array_out_pull();
 test_table_array_out_pull 
---------------------------
 t
(1 row)

SELECT  trans_id_in, delta_type, queue_priority, hold_updated, prior_hold_reason_count, prior_hold_reason_id, prior_hold_reason_text, id, attributes, no_diff
FROM    processor_data.test_table_array_out_processing
ORDER BY id, attributes;
 trans_id_in | delta_type | queue_priority | hold_updated | prior_hold_reason_count | prior_hold_reason_id | prior_hold_reason_text | id  |                                                   attributes                                                    | no_diff 
-------------+------------+----------------+--------------+-------------------------+----------------------+------------------------+-----+-----------------------------------------------------------------------------------------------------------------+---------
           7 | Add        |                |              |                         |                      |                        | (1) | {"(\"Thu Jan 01 19:04:05 2009 PST\",\"test_data1 v1\")","(\"Fri Jan 01 19:04:05 2010 PST\",\"test_data1 v2\")"} | 
           7 | Add        |                |              |                         |                      |                        | (2) | {"(\"Sat Jan 01 19:04:05 2011 PST\",\"test_data2 v1\")","(\"Sun Jan 01 19:04:05 2012 PST\",\"test_data2 v2\")"} | 
(2 rows)

SELECT * FROM processor_data.test_table_array_out_process();
 test_table_array_out_process 
------------------------------
 t
(1 row)

SELECT  test_table_array_id, trans_period, test_table_array_text
FROM    processor_data.test_table_array_out_active
ORDER BY test_table_array_id, test_table_array_text;
 test_table_array_id |           trans_period            | test_table_array_text 
---------------------+-----------------------------------+-----------------------
                   1 | ["Fri Jan 01 19:04:05 2010 PST",) | test_data1 v2
                   2 | ["Sun Jan 01 19:04:05 2012 PST",) | test_data2 v2
(2 rows)

SELECT  test_table_array_id, trans_period, test_table_array_text
FROM    processor_data.test_table_array_out_inactive
ORDER BY test_table_array_id, test_table_array_text;
 test_table_array_id |                          trans_period                           | test_table_array_text 
---------------------+-----------------------------------------------------------------+-----------------------
                   1 | ["Thu Jan 01 19:04:05 2009 PST","Fri Jan 01 19:04:05 2010 PST") | test_data1 v1
                   1 | ["Fri Jan 01 19:04:05 2010 PST",)                               | test_data1 v2
                   2 | ["Sat Jan 01 19:04:05 2011 PST","Sun Jan 01 19:04:05 2012 PST") | test_data2 v1
                   2 | ["Sun Jan 01 19:04:05 2012 PST",)                               | test_data2 v2
(4 rows)

SELECT  hold_reason_id, hold_reason_text, queue_priority
FROM    processor_data.test_table_array_out_processed
ORDER BY id;
 hold_reason_id | hold_reason_text | queue_priority 
----------------+------------------+----------------
                |                  |               
                |                  |               
(2 rows)

SELECT * FROM processor_data.test_table_array_out_push_status();
 test_table_array_out_push_status 
----------------------------------
 t
(1 row)

SELECT * FROM dblink('sys_syn_test', $$SELECT user_data.test_table_array_out_processed()$$) AS test_table_array_out_processed(result text);
 result 
--------
 t
(1 row)

SELECT dblink_exec('sys_syn_test', 'ROLLBACK');
 dblink_exec 
-------------
 ROLLBACK
(1 row)

SELECT dblink_disconnect('sys_syn_test');
 dblink_disconnect 
-------------------
 OK
(1 row)

ROLLBACK;
