BEGIN;
CREATE EXTENSION sys_syn_dblink;
CREATE EXTENSION temporal_tables;
CREATE EXTENSION btree_gist;
INSERT INTO sys_syn_dblink.put_table_transforms(
        rule_group_id,          priority,       final_ids,              in_table_id_like,
        table_settings)
VALUES (NULL,                   25,             '{}',                   'test_table_bitemporal',
        $$
        sys_syn.bitemporal.range_1.column_name          => trans_period,
        sys_syn.bitemporal.range_1.lower.column_name    => trans_time,
        sys_syn.bitemporal.range_2.column_name          => valid_period,
        sys_syn.bitemporal.range_2_active.column_name   => active_valid_periods
        $$);
INSERT INTO sys_syn_dblink.put_column_transforms(
        rule_group_id,          priority,       final_ids,              data_type_like,                 in_table_id_like,
        column_name_like,       new_data_type,          new_column_name,
        expression)
VALUES (NULL,                   25,             '{date_infinity}',      'date',                         'test_table_bitemporal',
        null,                   null,                   null,
     $$CASE WHEN %1 <= '0001-01-01'::DATE THEN NULL::DATE WHEN %1 >= '9999-12-31'::DATE THEN NULL::DATE ELSE %1 END$$);
CREATE SCHEMA processor_data
        AUTHORIZATION postgres;
CREATE SCHEMA put_data
        AUTHORIZATION postgres;
SELECT  dblink_connect('sys_syn_test', 'dbname=contrib_regression host=' ||
        quote_literal(split_part((SELECT pg_settings.setting FROM pg_settings WHERE pg_settings.name = 'unix_socket_directories'), ', ', 1)));
 dblink_connect 
----------------
 OK
(1 row)

SELECT dblink_exec('sys_syn_test', 'BEGIN');
 dblink_exec 
-------------
 BEGIN
(1 row)

INSERT INTO sys_syn_dblink.in_groups_def VALUES ('sys_syn_test', 'in');
INSERT INTO sys_syn_dblink.out_groups_def VALUES ('sys_syn_test', 'out');
INSERT INTO sys_syn_dblink.put_groups_def VALUES ('put');
SELECT sys_syn_dblink.processing_table_create (
        proc_schema     => 'processor_data',
        in_table_id     => 'test_table_bitemporal',
        out_group_id    => 'out',
        put_group_id    => 'put',
        put_schema      => 'put_data',
        table_type_id   => 'sys_syn-bitemporal',
        dblink_connname => 'sys_syn_test');
 processing_table_create 
-------------------------
 
(1 row)

SELECT * FROM processor_data.test_table_bitemporal_out_0_claim();
 test_table_bitemporal_out_0_claim 
-----------------------------------
 t
(1 row)

SELECT * FROM processor_data.test_table_bitemporal_out_0_pull();
 test_table_bitemporal_out_0_pull 
----------------------------------
 t
(1 row)

SELECT  trans_id_in, delta_type, queue_priority, hold_updated, prior_hold_reason_count, prior_hold_reason_id, prior_hold_reason_text, id, attributes, no_diff
FROM    processor_data.test_table_bitemporal_out_0_processing
ORDER BY id, attributes;
 trans_id_in | delta_type | queue_priority | hold_updated | prior_hold_reason_count | prior_hold_reason_id | prior_hold_reason_text | id  |                                                                                                                                                                                               attributes                                                                                                                                                                                                | no_diff 

           9 | Add        |                |              |                         |                      |                        | (1) | {"(\"Thu Jan 01 19:04:05 2009 PST\",01-03-2009,12-31-9999,\"test_data1 no changes\")"}                                                                                                                                                                                                                                                                                                                  | 
           9 | Add        |                |              |                         |                      |                        | (2) | {"(\"Sat Jan 01 19:04:05 2011 PST\",01-01-2009,12-31-9999,\"test_data2 v1 original\")","(\"Sun Jan 01 19:04:05 2012 PST\",02-01-2009,12-31-9999,\"test_data2 v2 forward period_2 change\")"}                                                                                                                                                                                                            | 
           9 | Add        |                |              |                         |                      |                        | (3) | {"(\"Sat Jan 01 19:04:05 2011 PST\",01-01-2009,12-31-9999,\"test_data3 v1 original\")","(\"Sun Jan 01 19:04:05 2012 PST\",01-01-2009,12-31-9999,\"test_data3 v2 replace period_2 change\")"}                                                                                                                                                                                                            | 
           9 | Add        |                |              |                         |                      |                        | (4) | {"(\"Sat Jan 01 19:04:05 2011 PST\",01-01-2009,12-31-9999,\"test_data4 v1 original\")","(\"Sun Jan 01 19:04:05 2012 PST\",12-01-2008,12-31-9999,\"test_data4 v2 backdate period_2 change\")"}                                                                                                                                                                                                           | 
           9 | Add        |                |              |                         |                      |                        | (5) | {"(\"Sat Jan 01 19:04:05 2011 PST\",01-01-2009,12-31-9999,\"test_data5 v1 original\")","(\"Sun Jan 01 19:04:05 2012 PST\",01-01-2009,12-31-9999,\"test_data5 v2 replace period_2 change\")","(\"Tue Jan 01 19:04:05 2013 PST\",03-01-2009,12-31-9999,\"test_data5 v3 forward period_2 change\")","(\"Wed Jan 01 19:04:05 2014 PST\",02-01-2009,12-31-9999,\"test_data5 v4 backdate period_2 change\")"} | 
(5 rows)

SELECT * FROM processor_data.test_table_bitemporal_out_0_process();
 test_table_bitemporal_out_0_process 
-------------------------------------
 t
(1 row)

SELECT  test_table_bitemporal_id, trans_period, valid_period, test_table_bitemporal_text
FROM    put_data.test_table_bitemporal_out
ORDER BY test_table_bitemporal_id, trans_period, valid_period, test_table_bitemporal_text;
 test_table_bitemporal_id |           trans_period            |      valid_period       |       test_table_bitemporal_text       
--------------------------+-----------------------------------+-------------------------+----------------------------------------
                        1 | ["Thu Jan 01 19:04:05 2009 PST",) | [01-03-2009,)           | test_data1 no changes
                        2 | ["Sat Jan 01 19:04:05 2011 PST",) | [01-01-2009,02-01-2009) | test_data2 v1 original
                        2 | ["Sun Jan 01 19:04:05 2012 PST",) | [02-01-2009,)           | test_data2 v2 forward period_2 change
                        3 | ["Sun Jan 01 19:04:05 2012 PST",) | [01-01-2009,)           | test_data3 v2 replace period_2 change
                        4 | ["Sun Jan 01 19:04:05 2012 PST",) | [12-01-2008,)           | test_data4 v2 backdate period_2 change
                        5 | ["Sun Jan 01 19:04:05 2012 PST",) | [01-01-2009,02-01-2009) | test_data5 v2 replace period_2 change
                        5 | ["Wed Jan 01 19:04:05 2014 PST",) | [02-01-2009,)           | test_data5 v4 backdate period_2 change
(7 rows)

SELECT  test_table_bitemporal_id, trans_period, valid_period, test_table_bitemporal_text
FROM    put_data.test_table_bitemporal_out_history
ORDER BY test_table_bitemporal_id, trans_period, valid_period, test_table_bitemporal_text;
 test_table_bitemporal_id |                          trans_period                           |      valid_period       |       test_table_bitemporal_text       
--------------------------+-----------------------------------------------------------------+-------------------------+----------------------------------------
                        1 | ["Thu Jan 01 19:04:05 2009 PST",)                               | [01-03-2009,)           | test_data1 no changes
                        2 | ["Sat Jan 01 19:04:05 2011 PST",)                               | [01-01-2009,02-01-2009) | test_data2 v1 original
                        2 | ["Sun Jan 01 19:04:05 2012 PST",)                               | [02-01-2009,)           | test_data2 v2 forward period_2 change
                        3 | ["Sat Jan 01 19:04:05 2011 PST","Sun Jan 01 19:04:05 2012 PST") | [01-01-2009,)           | test_data3 v1 original
                        3 | ["Sun Jan 01 19:04:05 2012 PST",)                               | [01-01-2009,)           | test_data3 v2 replace period_2 change
                        4 | ["Sat Jan 01 19:04:05 2011 PST","Sun Jan 01 19:04:05 2012 PST") | [01-01-2009,)           | test_data4 v1 original
                        4 | ["Sun Jan 01 19:04:05 2012 PST",)                               | [12-01-2008,)           | test_data4 v2 backdate period_2 change
                        5 | ["Sat Jan 01 19:04:05 2011 PST","Sun Jan 01 19:04:05 2012 PST") | [01-01-2009,)           | test_data5 v1 original
                        5 | ["Sun Jan 01 19:04:05 2012 PST",)                               | [01-01-2009,02-01-2009) | test_data5 v2 replace period_2 change
                        5 | ["Tue Jan 01 19:04:05 2013 PST","Wed Jan 01 19:04:05 2014 PST") | [03-01-2009,)           | test_data5 v3 forward period_2 change
                        5 | ["Wed Jan 01 19:04:05 2014 PST",)                               | [02-01-2009,)           | test_data5 v4 backdate period_2 change
(11 rows)

SELECT  test_table_bitemporal_id
FROM    put_data.test_table_bitemporal_out_immutable
ORDER BY test_table_bitemporal_id;
 test_table_bitemporal_id 
--------------------------
                        1
                        2
                        3
                        4
                        5
(5 rows)

SELECT  test_table_bitemporal_id, trans_time, valid_period, test_table_bitemporal_text
FROM    put_data.test_table_bitemporal_out_active
ORDER BY test_table_bitemporal_id, trans_time, valid_period, test_table_bitemporal_text;
 test_table_bitemporal_id |          trans_time          |      valid_period       |       test_table_bitemporal_text       
--------------------------+------------------------------+-------------------------+----------------------------------------
                        1 | Thu Jan 01 19:04:05 2009 PST | [01-03-2009,)           | test_data1 no changes
                        2 | Sat Jan 01 19:04:05 2011 PST | [01-01-2009,02-01-2009) | test_data2 v1 original
                        2 | Sun Jan 01 19:04:05 2012 PST | [02-01-2009,)           | test_data2 v2 forward period_2 change
                        3 | Sun Jan 01 19:04:05 2012 PST | [01-01-2009,)           | test_data3 v2 replace period_2 change
                        4 | Sun Jan 01 19:04:05 2012 PST | [12-01-2008,)           | test_data4 v2 backdate period_2 change
                        5 | Sun Jan 01 19:04:05 2012 PST | [01-01-2009,02-01-2009) | test_data5 v2 replace period_2 change
                        5 | Wed Jan 01 19:04:05 2014 PST | [02-01-2009,)           | test_data5 v4 backdate period_2 change
(7 rows)

SELECT  test_table_bitemporal_id, trans_time, valid_period, test_table_bitemporal_text
FROM    put_data.test_table_bitemporal_out_current
ORDER BY test_table_bitemporal_id, trans_time, valid_period, test_table_bitemporal_text;
 test_table_bitemporal_id |          trans_time          | valid_period  |       test_table_bitemporal_text       
--------------------------+------------------------------+---------------+----------------------------------------
                        1 | Thu Jan 01 19:04:05 2009 PST | [01-03-2009,) | test_data1 no changes
                        2 | Sun Jan 01 19:04:05 2012 PST | [02-01-2009,) | test_data2 v2 forward period_2 change
                        3 | Sun Jan 01 19:04:05 2012 PST | [01-01-2009,) | test_data3 v2 replace period_2 change
                        4 | Sun Jan 01 19:04:05 2012 PST | [12-01-2008,) | test_data4 v2 backdate period_2 change
                        5 | Wed Jan 01 19:04:05 2014 PST | [02-01-2009,) | test_data5 v4 backdate period_2 change
(5 rows)

SELECT  hold_reason_id, hold_reason_text, queue_priority
FROM    processor_data.test_table_bitemporal_out_0_processed
ORDER BY id;
 hold_reason_id | hold_reason_text | queue_priority 
----------------+------------------+----------------
                |                  |               
                |                  |               
                |                  |               
                |                  |               
                |                  |               
(5 rows)

SELECT * FROM processor_data.test_table_bitemporal_out_0_push_status();
 test_table_bitemporal_out_0_push_status 
-----------------------------------------
 t
(1 row)

SELECT dblink_exec('sys_syn_test', 'ROLLBACK');
 dblink_exec 
-------------
 ROLLBACK
(1 row)

SELECT dblink_disconnect('sys_syn_test');
 dblink_disconnect 
-------------------
 OK
(1 row)

ROLLBACK;
