BEGIN;
CREATE EXTENSION sys_syn_dblink;
CREATE SCHEMA processor_data
        AUTHORIZATION postgres;
CREATE SCHEMA put_data
        AUTHORIZATION postgres;
SELECT  dblink_connect('sys_syn_test', 'dbname=contrib_regression host=' ||
        quote_literal(split_part((SELECT pg_settings.setting FROM pg_settings WHERE pg_settings.name = 'unix_socket_directories'), ', ', 1)));
 dblink_connect 
----------------
 OK
(1 row)

SELECT dblink_exec('sys_syn_test', 'BEGIN');
 dblink_exec 
-------------
 BEGIN
(1 row)

INSERT INTO sys_syn_dblink.in_groups_def VALUES ('sys_syn_dblink-test', 'in');
INSERT INTO sys_syn_dblink.out_groups_def VALUES ('sys_syn_dblink-test', 'out');
INSERT INTO sys_syn_dblink.put_groups_def VALUES ('put');
INSERT INTO sys_syn_dblink.put_column_transforms (
        priority,       out_group_id_like,      in_group_id_like,
        proc_table_id_like,       column_name_like,               new_column_name,        new_data_type,
        expression
) VALUES (
        150,            'out',                  'in',
        'test_table_array',     'test_table_array_id',          'combined_id',          'text',
        $$'A'||%1$$
);
INSERT INTO sys_syn_dblink.put_column_transforms (
        priority,       out_group_id_like,      in_group_id_like,
        proc_table_id_like,       column_name_like,               new_column_name
) VALUES (
        150,            'out',                  'in',
        'test_table_array',     'test_table_array_updated',     'data_updated'
);
INSERT INTO sys_syn_dblink.put_column_transforms (
        priority,       out_group_id_like,      in_group_id_like,
        proc_table_id_like,       column_name_like,               new_column_name
) VALUES (
        150,            'out',                  'in',
        'test_table_array',     'test_table_array_text',        'text_value'
);
INSERT INTO sys_syn_dblink.put_column_transforms (
        priority,       out_group_id_like,      in_group_id_like,
        proc_table_id_like,       column_name_like,               new_column_name,        new_data_type,
        expression,
        add_columns
) VALUES (
        150,            'out',                  'in',
        'test_table',           'test_table_id',                'combined_id',          'text',
        $$'B'||%1$$,
        ARRAY[
                ROW(    'data_updated',         'text',         'Id',
                        $$'-infinity'::timestamp with time zone$$,
                        NULL,   'InColumnType',         FALSE,  ARRAY[]::TEXT[],
                        'Id')
        ]::sys_syn_dblink.create_put_column[]
);
INSERT INTO sys_syn_dblink.put_column_transforms (
        priority,       out_group_id_like,      in_group_id_like,
        proc_table_id_like,       column_name_like,               new_column_name
) VALUES (
        150,            'out',                  'in',
        'test_table',           'test_table_text',              'text_value'
);
SELECT sys_syn_dblink.proc_table_create (
        proc_schema     => 'processor_data',
        in_table_id     => 'test_table_array',
        out_group_id    => 'out',
        put_group_id    => 'put',
        put_schema      => 'put_data',
        put_table_name  => 'combined_data',
        dblink_connname => 'sys_syn_test');
 proc_table_create 
-------------------
 
(1 row)

SELECT sys_syn_dblink.proc_table_create (
        proc_schema     => 'processor_data',
        in_table_id     => 'test_table',
        out_group_id    => 'out',
        put_group_id    => 'put',
        put_schema      => 'put_data',
        put_table_name  => 'combined_data',
        dblink_connname => 'sys_syn_test');
 proc_table_create 
-------------------
 
(1 row)

SELECT * FROM processor_data.test_table_array_claim_1();
 test_table_array_claim_1 
--------------------------
 t
(1 row)

SELECT * FROM processor_data.test_table_claim_1();
 test_table_claim_1 
--------------------
 t
(1 row)

SELECT * FROM processor_data.test_table_array_pull_1();
 test_table_array_pull_1 
-------------------------
 t
(1 row)

SELECT * FROM processor_data.test_table_pull_1();
 test_table_pull_1 
-------------------
 t
(1 row)

SELECT  trans_id_in, delta_type, queue_priority, hold_updated, prior_hold_reason_count, prior_hold_reason_id, prior_hold_reason_text, id, attributes, no_diff
FROM    processor_data.test_table_array_processing_1
ORDER BY id, attributes;
 trans_id_in | delta_type | queue_priority | hold_updated | prior_hold_reason_count | prior_hold_reason_id | prior_hold_reason_text | id  |                                                   attributes                                                    | no_diff 
-------------+------------+----------------+--------------+-------------------------+----------------------+------------------------+-----+-----------------------------------------------------------------------------------------------------------------+---------
           7 | Add        |                |              |                         |                      |                        | (1) | {"(\"Thu Jan 01 19:04:05 2009 PST\",\"test_data1 v1\")","(\"Fri Jan 01 19:04:05 2010 PST\",\"test_data1 v2\")"} | 
           7 | Add        |                |              |                         |                      |                        | (2) | {"(\"Sat Jan 01 19:04:05 2011 PST\",\"test_data2 v1\")","(\"Sun Jan 01 19:04:05 2012 PST\",\"test_data2 v2\")"} | 
(2 rows)

SELECT  trans_id_in, delta_type, queue_priority, hold_updated, prior_hold_reason_count, prior_hold_reason_id, prior_hold_reason_text, id, attributes, no_diff
FROM    processor_data.test_table_processing_1
ORDER BY id, attributes;
 trans_id_in | delta_type | queue_priority | hold_updated | prior_hold_reason_count | prior_hold_reason_id | prior_hold_reason_text | id  |   attributes    | no_diff 
-------------+------------+----------------+--------------+-------------------------+----------------------+------------------------+-----+-----------------+---------
           1 | Add        |                |              |                         |                      |                        | (1) | ("test_data 1") | 
           1 | Add        |                |              |                         |                      |                        | (2) | ("test_data 2") | 
           1 | Add        |                |              |                         |                      |                        | (3) | ("test_data 3") | 
(3 rows)

SELECT * FROM processor_data.test_table_array_process_1();
 test_table_array_process_1 
----------------------------
 t
(1 row)

SELECT * FROM processor_data.test_table_process_1();
 test_table_process_1 
----------------------
 t
(1 row)

SELECT  *
FROM    put_data.combined_data
ORDER BY 1, 2;
 combined_id |         data_updated         |  text_value   
-------------+------------------------------+---------------
 A1          | Thu Jan 01 19:04:05 2009 PST | test_data1 v1
 A1          | Fri Jan 01 19:04:05 2010 PST | test_data1 v2
 A2          | Sat Jan 01 19:04:05 2011 PST | test_data2 v1
 A2          | Sun Jan 01 19:04:05 2012 PST | test_data2 v2
 B1          | -infinity                    | test_data 1
 B2          | -infinity                    | test_data 2
 B3          | -infinity                    | test_data 3
(7 rows)

SELECT  hold_reason_id, hold_reason_text, queue_priority
FROM    processor_data.test_table_array_processed_1
ORDER BY id;
 hold_reason_id | hold_reason_text | queue_priority 
----------------+------------------+----------------
                |                  |               
                |                  |               
(2 rows)

SELECT  hold_reason_id, hold_reason_text, queue_priority
FROM    processor_data.test_table_processed_1
ORDER BY id;
 hold_reason_id | hold_reason_text | queue_priority 
----------------+------------------+----------------
                |                  |               
                |                  |               
                |                  |               
(3 rows)

SELECT * FROM processor_data.test_table_array_push_status_1();
 test_table_array_push_status_1 
--------------------------------
 t
(1 row)

SELECT dblink_exec('sys_syn_test', 'ROLLBACK');
 dblink_exec 
-------------
 ROLLBACK
(1 row)

SELECT dblink_disconnect('sys_syn_test');
 dblink_disconnect 
-------------------
 OK
(1 row)

ROLLBACK;
